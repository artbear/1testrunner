#Использовать logos
#Использовать asserts

#Использовать "../src"

Перем юТест;
Перем Лог;

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт

	юТест = ЮнитТестирование;

	ВсеТесты = Новый Массив;

	ВсеТесты.Добавить("ТестДолжен_ПроверитьУспешныйТест");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьЗапускТестовКаталога");

	ВсеТесты.Добавить("ТестДолжен_ПроверитьВыполнениеПараметризованныхТестов");

	Возврат ВсеТесты;
КонецФункции

Процедура ПередЗапускомТеста() Экспорт
	ВремТестер = Новый Тестер;
	Лог = Логирование.ПолучитьЛог(ВремТестер.ИмяЛога());

КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт

КонецПроцедуры

Процедура ТестДолжен_ПроверитьУспешныйТест() Экспорт

	ПутьФайлаТеста = ОбъединитьПути(КаталогТестовыхФикстур(), "simple.os");

	Тестер = Новый Тестер;
	РезультатТестирования = Тестер.ТестироватьФайл(Новый Файл(ПутьФайлаТеста));

	ПроверитьРезультат(Тестер, РезультатТестирования);
КонецПроцедуры

Процедура ТестДолжен_ПроверитьЗапускТестовКаталога() Экспорт
	Тестер = Новый Тестер;
	РезультатТестирования = Тестер.ТестироватьКаталог(Новый Файл(КаталогТестовыхФикстур()));

	ПроверитьРезультат(Тестер, РезультатТестирования);
КонецПроцедуры

Процедура ТестДолжен_ПроверитьВыполнениеПараметризованныхТестов() Экспорт

	ПутьФайлаТеста = ОбъединитьПути(КаталогТестовыхФикстур(), "add.os");

	Тестер = Новый Тестер;
	РезультатТестирования = Тестер.ТестироватьФайл(Новый Файл(ПутьФайлаТеста));

	ПроверитьРезультат(Тестер, РезультатТестирования);
КонецПроцедуры

Процедура ПроверитьРезультат(Знач Тестер, Знач РезультатТестирования)
	Ожидаем.Что(Тестер.ПолучитьРезультатТестирования(),
		"Ожидали, что Тестер.ПолучитьРезультатТестирования() равен РезультатТестирования, а получили другое значение")
		.Равно(РезультатТестирования);

	Ожидаем.Что(Тестер.ПолучитьРезультатТестирования(),
		"Ожидали, что получим результат тестирования 0 ( `Прошел` ), а получили другое значение")
		.Равно(Тестер.ЗначенияСостоянияТестов().Прошел);
КонецПроцедуры

Функция КаталогТестовыхФикстур() Экспорт
	Возврат ОбъединитьПути(КаталогТестов(), "fixtures");
КонецФункции

Функция КаталогТестов() Экспорт
	Возврат ОбъединитьПути(КаталогИсходников(), "tests");
КонецФункции

Функция КаталогИсходников() Экспорт
	Возврат ОбъединитьПути(ТекущийСценарий().Каталог, "..");
КонецФункции
